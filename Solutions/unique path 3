class Solution {
public:
    
    int z=0;
    int dfs(vector<vector<int>>&g, int i, int j)
    {
        if(i<0 or j<0 or i>=g.size() or j>=g[0].size() or g[i][j]==-1)
            return 0;
        if(g[i][j]==2)
        {
            for(int i=0;i<g.size();i++)
            {
                for(int j=0;j<g[0].size();j++)
                {
                    if(g[i][j]==0)
                        return 0;
                }
            }
            return 1;
        }
        int temp = g[i][j]; 
        g[i][j]=-1;
        int ans = dfs(g,i-1,j);
        ans+=dfs(g,i+1,j);
        ans+=dfs(g,i,j-1);
        ans+=dfs(g,i,j+1);
        g[i][j]=temp;
        return ans;
    }
    int uniquePathsIII(vector<vector<int>>& g) {
        int n = g.size();
        int m = g[0].size();
        int ans=0;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(g[i][j]==1)
                {
                    ans=dfs(g,i,j);
                }
            }
        }
        return ans;
    }
};
